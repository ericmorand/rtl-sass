@mixin rtl-declaration($property, $leftOrRight, $suffix, $value) {
  @if ($leftOrRight == null) {
    @error "parameter $leftOrRight can't be null in call to Mixin rtl-declaration";
  }

  @if ($value == null) {
    @error "parameter $value can't be null in call to Mixin rtl-declaration";
  }

  $opposite: right;

  @if ($leftOrRight == right) {
    $opposite: left;
  }

  [dir="ltr"] & {
    #{$property}#{$leftOrRight}#{$suffix}: $value;
  }

  [dir="rtl"] & {
    #{$property}#{$opposite}#{$suffix}: $value;
  }
}

@mixin rtl-declaration-value($property, $value) {
  @if ($property == null) {
    @error "parameter $property can't be null in call to Mixin rtl-declaration-value";
  }

  @if ($value == null) {
    @error "parameter $value can't be null in call to Mixin rtl-declaration-value";
  }

  [dir="ltr"] & {
    #{$property}: $value;
  }

  [dir="rtl"] & {
    @if ($value == left) {
      #{$property}: right;
    } @else if ($value == right) {
      #{$property}: left;
    } @else {
      #{$property}: $value;
    }
  }
}

@mixin rtl-declaration-1-to-4($property, $one, $two: null, $three: null, $four: null) {
  @if ($property == null) {
    @error "parameter $property can't be null in call to Mixin rtl-declaration-1-to-4";
  }

  @if ($one == null) {
    @error "parameter $one can't be null in call to Mixin rtl-declaration-1-to-4";
  }

  // one only => all
  $topValue: $one;
  $rightValue: $one;
  $bottomValue: $one;
  $leftValue: $one;

  @if ($one != null and $two != null and $three == null and $four == null) {
    // one and two only => vertical and horizontal
    $topValue: $one;
    $rightValue: $two;
    $bottomValue: $one;
    $leftValue: $two;
  } @else if ($one != null and $two != null and $three != null and $four == null) {
    // one, two and three only => top, horizontal and bottom
    $topValue: $one;
    $rightValue: $two;
    $bottomValue: $three;
    $leftValue: $two;
  } @else if ($one != null and $two != null and $three != null and $four != null) {
    // all
    $topValue: $one;
    $rightValue: $two;
    $leftValue: $three;
    $bottomValue: $four;
  }

  #{$property}top: $topValue;
  @include rtl-declaration($property, right, null, $rightValue);
  #{$property}bottom: $bottomValue;
  @include rtl-declaration($property, left, null, $leftValue);
}

/**********/
/* border */
/**********/
// left
@mixin border-left($value) {
  @include rtl-declaration(border-, left, null, $value);
}

@mixin border-left-color($value) {
  @include rtl-declaration(border-, left, -color, $value);
}

@mixin border-left-style($value) {
  @include rtl-declaration(border-, left, -style, $value);
}

@mixin border-left-width($value) {
  @include rtl-declaration(border-, left, -width, $value);
}

@mixin border-top-left-radius($value) {
  @include rtl-declaration(border-top-, left, -radius, $value);
}

@mixin border-bottom-left-radius($value) {
  @include rtl-declaration(border-bottom-, left, -radius, $value);
}

// right
@mixin border-right($value) {
  @include rtl-declaration(border-, right, null, $value);
}

@mixin border-right-color($value) {
  @include rtl-declaration(border-, right, -color, $value);
}

@mixin border-right-style($value) {
  @include rtl-declaration(border-, right, -style, $value);
}

@mixin border-right-width($value) {
  @include rtl-declaration(border-, right, -width, $value);
}

@mixin border-top-right-radius($value) {
  @include rtl-declaration(border-top-, right, -radius, $value);
}

@mixin border-bottom-right-radius($value) {
  @include rtl-declaration(border-bottom-, right, -radius, $value);
}

@mixin border($one, $two: null, $three: null, $four: null) {
  @include rtl-declaration-1-to-4(border-, $one, $two, $three, $four);
}

// margin
@mixin margin-left($value) {
  @include rtl-declaration(margin-, left, null, $value);
}

@mixin margin-right($value) {
  @include rtl-declaration(margin-, right, null, $value);
}

@mixin margin($one, $two: null, $three: null, $four: null) {
  @include rtl-declaration-1-to-4(margin-, $one, $two, $three, $four);
}

// padding
@mixin padding-left($value) {
  @include rtl-declaration(padding-, left, null, $value);
}

@mixin padding-right($value) {
  @include rtl-declaration(padding-, right, null, $value);
}

@mixin padding($one, $two: null, $three: null, $four: null) {
  @include rtl-declaration-1-to-4(padding-, $one, $two, $three, $four);
}

// positioning
@mixin left($value) {
  @include rtl-declaration(null, left, null, $value);
}

@mixin right($value) {
  @include rtl-declaration(null, right, null, $value);
}

// text-align
@mixin text-align($value) {
  @include rtl-declaration-value(text-align, $value);
}

// float
@mixin float($value) {
  @include rtl-declaration-value(float, $value);
}